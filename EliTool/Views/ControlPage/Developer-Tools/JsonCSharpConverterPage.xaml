<Page
    x:Class="EliTool.Views.ControlPage.DeveloperTools.JsonCSharpConverterPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:CommunityToolkit.WinUI.Controls"
    xmlns:ui="using:CommunityToolkit.WinUI" xmlns:viewmodels="using:EliTool.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:JsonCSharpConverterViewModel}"
    mc:Ignorable="d">

    <Grid x:Name="ContentArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <DropDownButton AutomationProperties.Name="Documentation">
                    <DropDownButton.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE8A5;" FontSize="14"/>
                            <TextBlock Margin="10,0,0,0">Documentation</TextBlock>
                        </StackPanel>
                    </DropDownButton.Content>
                    <DropDownButton.Flyout>
                        <Flyout>
                            <StackPanel>
                                <HyperlinkButton Content="JSON documentation" NavigateUri=""/>
                                <HyperlinkButton Content="C# documentation" NavigateUri=""/>
                            </StackPanel>
                        </Flyout>
                    </DropDownButton.Flyout>
                </DropDownButton>
                <DropDownButton AutomationProperties.Name="Github Source">
                    <DropDownButton.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Assets/Github.png" Height="14" Width="14"/>
                            <TextBlock Margin="10,0,0,0">Source</TextBlock>
                        </StackPanel>
                    </DropDownButton.Content>
                    <DropDownButton.Flyout>
                        <Flyout>
                            <StackPanel>
                                <HyperlinkButton Content="XAML source code" NavigateUri=""/>
                                <HyperlinkButton Content="C# source code" NavigateUri=""/>
                            </StackPanel>
                        </Flyout>
                    </DropDownButton.Flyout>
                </DropDownButton>
            </StackPanel>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <Button ToolTipService.ToolTip="Copy Link" Margin="5">
                    <FontIcon Glyph="&#xE71B;" FontSize="14"/>
                </Button>
                <Button ToolTipService.ToolTip="Feed Back" Margin="10,0,0,0">
                    <FontIcon Glyph="&#xE8BD;" FontSize="14"/>
                </Button>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1" Padding="0,0,0,50">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <TextBlock Margin="0,20,0,20">此工具将帮助您从JSON代码转换成c#实体类，该工具为静态类工具，即不联网工作(参照<Hyperlink x:Name="ToStaticToolDocument">静态类工具</Hyperlink>)</TextBlock>
            <toolkit:Segmented SelectedIndex="0"
                               Grid.Row="1"
                               Margin="0,0,0,20"
                               SelectionChanged="Segmented_SelectionChanged">
                <toolkit:SegmentedItem Content="JSON"
                                    ToolTipService.ToolTip="JSON view" />
                <toolkit:SegmentedItem Content="C#"
                                    ToolTipService.ToolTip="C# view" />
            </toolkit:Segmented>

            <TextBox Text="{x:Bind ViewModel.InputString,Mode=TwoWay}" TextWrapping="Wrap" Margin="0,0,0,20" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="CodeTextBox" Grid.Row="2"/>

            <toolkit:SettingsExpander HeaderIcon="Setting"
                                      Header="选项"
                                      Description="设置选项以生成出心仪的c#代码"
                                      IsExpanded="True"
                                      Grid.Row="3"
                                      VerticalAlignment="Bottom">
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="SummonTest" Command="{x:Bind ViewModel.SummonTestCommand}">生成测试用例</Button>
                    <Button x:Name="CopyCS" Command="{x:Bind ViewModel.CopyInputCommand}" Click="CopyCS_Click" Margin="5,0,0,0">复制生成内容</Button>
                    <Button x:Name="ClearContent" Command="{x:Bind ViewModel.ClearInputCommand}" Style="{ThemeResource AccentButtonStyle}" Margin="5,0,0,0">清除输入框内容</Button>
                </StackPanel>
                <toolkit:SettingsExpander.Items>
                    <toolkit:SettingsCard>
                        <toolkit:SettingsCard.Header>
                            <ToggleSwitch OnContent="生成属性注释" OffContent="不生成属性注释" IsOn="{Binding }" x:Name="NeedDoc"/>
                        </toolkit:SettingsCard.Header>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsEnabled="{Binding ElementName=NeedDoc,Path=IsOn}" x:Name="NeedValueDoc">生成值注释</CheckBox>
                            <CheckBox IsEnabled="{Binding ElementName=NeedDoc,Path=IsOn}" x:Name="NeedKeyDoc">生成键注释</CheckBox>
                            <CheckBox IsEnabled="{Binding ElementName=NeedDoc,Path=IsOn}" x:Name="NeedRawString">生成原始键值对字符串</CheckBox>
                        </StackPanel>
                    </toolkit:SettingsCard>
                    <toolkit:SettingsCard>
                        <toolkit:SettingsCard.Header>
                            <ToggleSwitch HorizontalAlignment="Right" OnContent="生成类后缀  " OffContent="不生成类后缀  " x:Name="NeedExname"/>
                        </toolkit:SettingsCard.Header>
                        <TextBox PlaceholderText="想生成的类后缀" IsEnabled="{Binding ElementName=NeedExname,Path=IsOn}" x:Name="ExName"/>
                    </toolkit:SettingsCard>
                    <toolkit:SettingsCard>
                        <toolkit:SettingsCard.Header>
                            <ToggleSwitch HorizontalAlignment="Right" OnContent="自动重命名  " OffContent="不自动重命名  " x:Name="NeedAutoRename"/>
                        </toolkit:SettingsCard.Header>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsEnabled="{Binding ElementName=NeedAutoRename,Path=IsOn}" x:Name="AutoAddToFront">
                                <TextBox x:Name="FrontContent" IsEnabled="{Binding ElementName=AutoAddToFront,Path=IsChecked}" PlaceholderText="要添加的前缀"/>
                            </CheckBox>
                            <CheckBox IsEnabled="{Binding ElementName=NeedAutoRename,Path=IsOn}" x:Name="AutoReplace" Margin="10,0,0,0">
                                <TextBox x:Name="ReplaceContent" IsEnabled="{Binding ElementName=AutoReplace,Path=IsChecked}" PlaceholderText="要替换掉错误命名的字符"/>
                            </CheckBox>
                        </StackPanel>
                    </toolkit:SettingsCard>
                </toolkit:SettingsExpander.Items>
            </toolkit:SettingsExpander>
        </Grid>
    </Grid>
</Page>
